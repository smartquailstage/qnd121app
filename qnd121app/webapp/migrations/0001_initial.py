# Generated by Django 4.2.20 on 2025-03-09 23:52

from django.db import migrations, models
import django.db.models.deletion
import modelcluster.fields
import wagtail.contrib.forms.models
import wagtail.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wagtailimages', '0027_image_description'),
        ('wagtailcore', '0094_alter_page_locale'),
    ]

    operations = [
        migrations.CreateModel(
            name='Charms',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('to_address', models.CharField(blank=True, help_text='Optional - form submissions will be emailed to these addresses. Separate multiple addresses by comma.', max_length=255, validators=[wagtail.contrib.forms.models.validate_to_address], verbose_name='to address')),
                ('from_address', models.EmailField(blank=True, max_length=255, verbose_name='from address')),
                ('subject', models.CharField(blank=True, max_length=255, verbose_name='subject')),
                ('bio', wagtail.fields.RichTextField(blank=True, verbose_name='rseña bibliografica')),
                ('banner_title4', wagtail.fields.RichTextField(blank=True, verbose_name='Titulo de galeria-1 ')),
                ('banner_detail4', models.CharField(blank=True, max_length=1000, verbose_name='detalle de galeria-1 ')),
                ('banner_title5', wagtail.fields.RichTextField(blank=True, verbose_name='Titulo de galeria-2  ')),
                ('banner_detail5', models.CharField(blank=True, max_length=1000, verbose_name='detalle de galeria-2 ')),
                ('banner_title6', wagtail.fields.RichTextField(blank=True, verbose_name='Titulo de galeria-3  ')),
                ('banner_detail6', models.CharField(blank=True, max_length=1000, verbose_name='detalle de galeria-3 ')),
                ('banner_title7', wagtail.fields.RichTextField(blank=True, verbose_name='Titulo de galeria-4  ')),
                ('banner_detail7', models.CharField(blank=True, max_length=1000, verbose_name='detalle de galeria-4 ')),
                ('banner_title8', wagtail.fields.RichTextField(blank=True, verbose_name='Titulo de galeria-5  ')),
                ('banner_detail8', models.CharField(blank=True, max_length=1000, verbose_name='detalle de galeria-5 ')),
                ('banner_title9', wagtail.fields.RichTextField(blank=True, verbose_name='Titulo de galeria-6  ')),
                ('banner_detail9', models.CharField(blank=True, max_length=1000, verbose_name='detalle de galeria-6 ')),
                ('banner_title10', wagtail.fields.RichTextField(blank=True, verbose_name='Titulo de galeria-7  ')),
                ('banner_detail10', models.CharField(blank=True, max_length=1000, verbose_name='detalle de galeria-7 ')),
                ('banner_title11', wagtail.fields.RichTextField(blank=True, verbose_name='Titulo de galeria-8  ')),
                ('banner_detail11', models.CharField(blank=True, max_length=1000, verbose_name='detalle de galeria-8')),
                ('banner_title12', wagtail.fields.RichTextField(blank=True, verbose_name='Titulo de galeria-9  ')),
                ('banner_detail12', models.CharField(blank=True, max_length=1000, verbose_name='detalle de galeria-9 ')),
                ('banner_title13', wagtail.fields.RichTextField(blank=True, verbose_name='Titulo de galeria-10  ')),
                ('banner_detail13', models.CharField(blank=True, max_length=1000, verbose_name='detalle de galeria-10')),
                ('banner_title14', wagtail.fields.RichTextField(blank=True, verbose_name='Titulo de galeria-11 ')),
                ('banner_detail14', models.CharField(blank=True, max_length=1000, verbose_name='detalle de galeria-11 ')),
                ('banner_title15', wagtail.fields.RichTextField(blank=True, verbose_name='Titulo de galeria-12  ')),
                ('banner_detail15', models.CharField(blank=True, max_length=1000, verbose_name='detalle de galeria-12')),
                ('custom_title', models.CharField(blank=True, help_text='Reescribe el  Titulo de la publicacion ', max_length=100, null=True)),
                ('consulta', wagtail.fields.RichTextField(blank=True, verbose_name='Mensaje para que nos consulten por el formulario')),
                ('thank_you_text', wagtail.fields.RichTextField(blank=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(wagtail.contrib.forms.models.FormMixin, 'wagtailcore.page', models.Model),
        ),
        migrations.CreateModel(
            name='Contacts',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('to_address', models.CharField(blank=True, help_text='Optional - form submissions will be emailed to these addresses. Separate multiple addresses by comma.', max_length=255, validators=[wagtail.contrib.forms.models.validate_to_address], verbose_name='to address')),
                ('from_address', models.EmailField(blank=True, max_length=255, verbose_name='from address')),
                ('subject', models.CharField(blank=True, max_length=255, verbose_name='subject')),
                ('banner_title4', wagtail.fields.RichTextField(blank=True, verbose_name='Descripcion de la localizacion')),
                ('bio', wagtail.fields.RichTextField(blank=True, verbose_name='rseña bibliografica')),
                ('banner_title5', wagtail.fields.RichTextField(blank=True, verbose_name='Email  ')),
                ('banner_title6', wagtail.fields.RichTextField(blank=True, verbose_name='Adress  ')),
                ('banner_title7', wagtail.fields.RichTextField(blank=True, verbose_name='phone number')),
                ('custom_title', models.CharField(blank=True, help_text='Reescribe el  Titulo de la publicacion ', max_length=100, null=True)),
                ('consulta', wagtail.fields.RichTextField(blank=True, verbose_name='Mensaje para que nos consulten por el formulario')),
                ('thank_you_text', wagtail.fields.RichTextField(blank=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(wagtail.contrib.forms.models.FormMixin, 'wagtailcore.page', models.Model),
        ),
        migrations.CreateModel(
            name='Environs',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('to_address', models.CharField(blank=True, help_text='Optional - form submissions will be emailed to these addresses. Separate multiple addresses by comma.', max_length=255, validators=[wagtail.contrib.forms.models.validate_to_address], verbose_name='to address')),
                ('from_address', models.EmailField(blank=True, max_length=255, verbose_name='from address')),
                ('subject', models.CharField(blank=True, max_length=255, verbose_name='subject')),
                ('bio', wagtail.fields.RichTextField(blank=True, verbose_name='rseña bibliografica')),
                ('banner_title4', wagtail.fields.RichTextField(blank=True, verbose_name='Titulo de galeria-1 ')),
                ('banner_title5', wagtail.fields.RichTextField(blank=True, verbose_name='Titulo de galeria-2  ')),
                ('banner_title6', wagtail.fields.RichTextField(blank=True, verbose_name='Titulo de galeria-3  ')),
                ('banner_title7', wagtail.fields.RichTextField(blank=True, verbose_name='Next  ')),
                ('banner_title8', wagtail.fields.RichTextField(blank=True, verbose_name='Prev ')),
                ('banner_title9', wagtail.fields.RichTextField(blank=True, verbose_name='Titulo de galeria-4  ')),
                ('banner_title10', wagtail.fields.RichTextField(blank=True, verbose_name='Titulo de galeria-4  ')),
                ('banner_title11', wagtail.fields.RichTextField(blank=True, verbose_name='Titulo de galeria-4  ')),
                ('next', models.CharField(blank=True, max_length=150, null=True, verbose_name='Next')),
                ('prev', models.CharField(blank=True, max_length=150, null=True, verbose_name='Prev')),
                ('TS_info1', models.CharField(blank=True, max_length=150, null=True, verbose_name='Tearsheet-1 info')),
                ('TS_date1', models.DateField(blank=True, null=True, verbose_name='Fecha de Tearsheet-1')),
                ('TS_info2', models.CharField(blank=True, max_length=150, null=True, verbose_name='Tearsheet-2 info')),
                ('TS_date2', models.DateField(blank=True, null=True, verbose_name='Fecha de Tearsheet-2')),
                ('TS_info3', models.CharField(blank=True, max_length=150, null=True, verbose_name='Tearsheet-3 info')),
                ('TS_date3', models.DateField(blank=True, null=True, verbose_name='Fecha de Tearsheet-3')),
                ('TS_info4', models.CharField(blank=True, max_length=150, null=True, verbose_name='Tearsheet-4 info')),
                ('TS_date4', models.DateField(blank=True, null=True, verbose_name='Fecha de Tearsheet-4')),
                ('TS_info5', models.CharField(blank=True, max_length=150, null=True, verbose_name='Tearsheet-5 info')),
                ('TS_date5', models.DateField(blank=True, null=True, verbose_name='Fecha de Tearsheet-5')),
                ('TS_info6', models.CharField(blank=True, max_length=150, null=True, verbose_name='Tearsheet-6 info')),
                ('TS_date6', models.DateField(blank=True, null=True, verbose_name='Fecha de Tearsheet-6')),
                ('TS_info7', models.CharField(blank=True, max_length=150, null=True, verbose_name='Tearsheet-7 info')),
                ('TS_date7', models.DateField(blank=True, null=True, verbose_name='Fecha de Tearsheet-7')),
                ('TS_info8', models.CharField(blank=True, max_length=150, null=True, verbose_name='Tearsheet-8 info')),
                ('TS_date8', models.DateField(blank=True, null=True, verbose_name='Fecha de Tearsheet-8')),
                ('TS_info9', models.CharField(blank=True, max_length=150, null=True, verbose_name='Tearsheet-9 info')),
                ('TS_date9', models.DateField(blank=True, null=True, verbose_name='Fecha de Tearsheet-9')),
                ('TS_info10', models.CharField(blank=True, max_length=150, null=True, verbose_name='Tearsheet-10 info')),
                ('TS_date10', models.DateField(blank=True, null=True, verbose_name='Fecha de Tearsheet-10')),
                ('TS_info11', models.CharField(blank=True, max_length=150, null=True, verbose_name='Tearsheet-11 info')),
                ('TS_date11', models.DateField(blank=True, null=True, verbose_name='Fecha de Tearsheet-11')),
                ('TS_info12', models.CharField(blank=True, max_length=150, null=True, verbose_name='Tearsheet-12 info')),
                ('TS_date12', models.DateField(blank=True, null=True, verbose_name='Fecha de Tearsheet-12')),
                ('TS_info13', models.CharField(blank=True, max_length=150, null=True, verbose_name='Tearsheet-13 info')),
                ('TS_date13', models.DateField(blank=True, null=True, verbose_name='Fecha de Tearsheet-13')),
                ('TS_info14', models.CharField(blank=True, max_length=150, null=True, verbose_name='Tearsheet-14 info')),
                ('TS_date14', models.DateField(blank=True, null=True, verbose_name='Fecha de Tearsheet-14')),
                ('TS_info15', models.CharField(blank=True, max_length=150, null=True, verbose_name='Tearsheet-15 info')),
                ('TS_date15', models.DateField(blank=True, null=True, verbose_name='Fecha de Tearsheet-15')),
                ('TS_info16', models.CharField(blank=True, max_length=150, null=True, verbose_name='Tearsheet-16 info')),
                ('TS_date16', models.DateField(blank=True, null=True, verbose_name='Fecha de Tearsheet-16')),
                ('TS_info17', models.CharField(blank=True, max_length=150, null=True, verbose_name='Tearsheet-17 info')),
                ('TS_date17', models.DateField(blank=True, null=True, verbose_name='Fecha de Tearsheet-17')),
                ('TS_info18', models.CharField(blank=True, max_length=150, null=True, verbose_name='Tearsheet-18 info')),
                ('TS_date18', models.DateField(blank=True, null=True, verbose_name='Fecha de Tearsheet-18')),
                ('TS_info19', models.CharField(blank=True, max_length=150, null=True, verbose_name='Tearsheet-19 info')),
                ('TS_date19', models.DateField(blank=True, null=True, verbose_name='Fecha de Tearsheet-19')),
                ('TS_info20', models.CharField(blank=True, max_length=150, null=True, verbose_name='Tearsheet-20 info')),
                ('TS_date20', models.DateField(blank=True, null=True, verbose_name='Fecha de Tearsheet-20')),
                ('custom_title', models.CharField(blank=True, help_text='Reescribe el  Titulo de la publicacion ', max_length=100, null=True)),
                ('consulta', wagtail.fields.RichTextField(blank=True, verbose_name='Mensaje para que nos consulten por el formulario')),
                ('thank_you_text', wagtail.fields.RichTextField(blank=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(wagtail.contrib.forms.models.FormMixin, 'wagtailcore.page', models.Model),
        ),
        migrations.CreateModel(
            name='History',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('to_address', models.CharField(blank=True, help_text='Optional - form submissions will be emailed to these addresses. Separate multiple addresses by comma.', max_length=255, validators=[wagtail.contrib.forms.models.validate_to_address], verbose_name='to address')),
                ('from_address', models.EmailField(blank=True, max_length=255, verbose_name='from address')),
                ('subject', models.CharField(blank=True, max_length=255, verbose_name='subject')),
                ('bio', wagtail.fields.RichTextField(blank=True, verbose_name='rseña bibliografica')),
                ('banner_title4', wagtail.fields.RichTextField(blank=True, verbose_name='Titulo de galeria-1 ')),
                ('banner_title5', wagtail.fields.RichTextField(blank=True, verbose_name='Titulo de galeria-2  ')),
                ('banner_title6', wagtail.fields.RichTextField(blank=True, verbose_name='Titulo de galeria-3  ')),
                ('banner_title7', wagtail.fields.RichTextField(blank=True, verbose_name='Titulo de galeria-4  ')),
                ('banner_title8', wagtail.fields.RichTextField(blank=True, verbose_name='Titulo de galeria-4  ')),
                ('banner_title9', wagtail.fields.RichTextField(blank=True, verbose_name='Titulo de galeria-4  ')),
                ('banner_title10', wagtail.fields.RichTextField(blank=True, verbose_name='Titulo de galeria-4  ')),
                ('banner_title11', wagtail.fields.RichTextField(blank=True, verbose_name='Titulo de galeria-4  ')),
                ('custom_title', models.CharField(blank=True, help_text='Reescribe el  Titulo de la publicacion ', max_length=100, null=True)),
                ('consulta', wagtail.fields.RichTextField(blank=True, verbose_name='Mensaje para que nos consulten por el formulario')),
                ('thank_you_text', wagtail.fields.RichTextField(blank=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(wagtail.contrib.forms.models.FormMixin, 'wagtailcore.page', models.Model),
        ),
        migrations.CreateModel(
            name='Home',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('to_address', models.CharField(blank=True, help_text='Optional - form submissions will be emailed to these addresses. Separate multiple addresses by comma.', max_length=255, validators=[wagtail.contrib.forms.models.validate_to_address], verbose_name='to address')),
                ('from_address', models.EmailField(blank=True, max_length=255, verbose_name='from address')),
                ('subject', models.CharField(blank=True, max_length=255, verbose_name='subject')),
                ('bio', wagtail.fields.RichTextField(blank=True, verbose_name='rseña bibliografica')),
                ('banner_title4', wagtail.fields.RichTextField(blank=True, verbose_name='Titulo de galeria-1 ')),
                ('banner_title5', wagtail.fields.RichTextField(blank=True, verbose_name='Titulo de galeria-2  ')),
                ('banner_title6', wagtail.fields.RichTextField(blank=True, verbose_name='Titulo de galeria-3  ')),
                ('banner_title7', wagtail.fields.RichTextField(blank=True, verbose_name='Titulo de galeria-4  ')),
                ('banner_title8', wagtail.fields.RichTextField(blank=True, verbose_name='Titulo de galeria-4  ')),
                ('banner_title9', wagtail.fields.RichTextField(blank=True, verbose_name='Titulo de galeria-4  ')),
                ('banner_title10', wagtail.fields.RichTextField(blank=True, verbose_name='Titulo de galeria-4  ')),
                ('banner_title11', wagtail.fields.RichTextField(blank=True, verbose_name='Titulo de galeria-4  ')),
                ('TS_info1', models.CharField(blank=True, max_length=150, null=True, verbose_name='Tearsheet-1 info')),
                ('TS_date1', models.DateField(blank=True, null=True, verbose_name='Fecha de Tearsheet-1')),
                ('TS_info2', models.CharField(blank=True, max_length=150, null=True, verbose_name='Tearsheet-2 info')),
                ('TS_date2', models.DateField(blank=True, null=True, verbose_name='Fecha de Tearsheet-2')),
                ('TS_info3', models.CharField(blank=True, max_length=150, null=True, verbose_name='Tearsheet-3 info')),
                ('TS_date3', models.DateField(blank=True, null=True, verbose_name='Fecha de Tearsheet-3')),
                ('TS_info4', models.CharField(blank=True, max_length=150, null=True, verbose_name='Tearsheet-4 info')),
                ('TS_date4', models.DateField(blank=True, null=True, verbose_name='Fecha de Tearsheet-4')),
                ('TS_info5', models.CharField(blank=True, max_length=150, null=True, verbose_name='Tearsheet-5 info')),
                ('TS_date5', models.DateField(blank=True, null=True, verbose_name='Fecha de Tearsheet-5')),
                ('TS_info6', models.CharField(blank=True, max_length=150, null=True, verbose_name='Tearsheet-6 info')),
                ('TS_date6', models.DateField(blank=True, null=True, verbose_name='Fecha de Tearsheet-6')),
                ('TS_info7', models.CharField(blank=True, max_length=150, null=True, verbose_name='Tearsheet-7 info')),
                ('TS_date7', models.DateField(blank=True, null=True, verbose_name='Fecha de Tearsheet-7')),
                ('TS_info8', models.CharField(blank=True, max_length=150, null=True, verbose_name='Tearsheet-8 info')),
                ('TS_date8', models.DateField(blank=True, null=True, verbose_name='Fecha de Tearsheet-8')),
                ('TS_info9', models.CharField(blank=True, max_length=150, null=True, verbose_name='Tearsheet-9 info')),
                ('TS_date9', models.DateField(blank=True, null=True, verbose_name='Fecha de Tearsheet-9')),
                ('TS_info10', models.CharField(blank=True, max_length=150, null=True, verbose_name='Tearsheet-10 info')),
                ('TS_date10', models.DateField(blank=True, null=True, verbose_name='Fecha de Tearsheet-10')),
                ('TS_info11', models.CharField(blank=True, max_length=150, null=True, verbose_name='Tearsheet-11 info')),
                ('TS_date11', models.DateField(blank=True, null=True, verbose_name='Fecha de Tearsheet-11')),
                ('TS_info12', models.CharField(blank=True, max_length=150, null=True, verbose_name='Tearsheet-12 info')),
                ('TS_date12', models.DateField(blank=True, null=True, verbose_name='Fecha de Tearsheet-12')),
                ('TS_info13', models.CharField(blank=True, max_length=150, null=True, verbose_name='Tearsheet-13 info')),
                ('TS_date13', models.DateField(blank=True, null=True, verbose_name='Fecha de Tearsheet-13')),
                ('TS_info14', models.CharField(blank=True, max_length=150, null=True, verbose_name='Tearsheet-14 info')),
                ('TS_date14', models.DateField(blank=True, null=True, verbose_name='Fecha de Tearsheet-14')),
                ('TS_info15', models.CharField(blank=True, max_length=150, null=True, verbose_name='Tearsheet-15 info')),
                ('TS_date15', models.DateField(blank=True, null=True, verbose_name='Fecha de Tearsheet-15')),
                ('TS_info16', models.CharField(blank=True, max_length=150, null=True, verbose_name='Tearsheet-16 info')),
                ('TS_date16', models.DateField(blank=True, null=True, verbose_name='Fecha de Tearsheet-16')),
                ('TS_info17', models.CharField(blank=True, max_length=150, null=True, verbose_name='Tearsheet-17 info')),
                ('TS_date17', models.DateField(blank=True, null=True, verbose_name='Fecha de Tearsheet-17')),
                ('TS_info18', models.CharField(blank=True, max_length=150, null=True, verbose_name='Tearsheet-18 info')),
                ('TS_date18', models.DateField(blank=True, null=True, verbose_name='Fecha de Tearsheet-18')),
                ('TS_info19', models.CharField(blank=True, max_length=150, null=True, verbose_name='Tearsheet-19 info')),
                ('TS_date19', models.DateField(blank=True, null=True, verbose_name='Fecha de Tearsheet-19')),
                ('TS_info20', models.CharField(blank=True, max_length=150, null=True, verbose_name='Tearsheet-20 info')),
                ('TS_date20', models.DateField(blank=True, null=True, verbose_name='Fecha de Tearsheet-20')),
                ('custom_title', models.CharField(blank=True, help_text='Reescribe el  Titulo de la publicacion ', max_length=100, null=True)),
                ('consulta', wagtail.fields.RichTextField(blank=True, verbose_name='Mensaje para que nos consulten por el formulario')),
                ('thank_you_text', wagtail.fields.RichTextField(blank=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(wagtail.contrib.forms.models.FormMixin, 'wagtailcore.page', models.Model),
        ),
        migrations.CreateModel(
            name='Host',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('to_address', models.CharField(blank=True, help_text='Optional - form submissions will be emailed to these addresses. Separate multiple addresses by comma.', max_length=255, validators=[wagtail.contrib.forms.models.validate_to_address], verbose_name='to address')),
                ('from_address', models.EmailField(blank=True, max_length=255, verbose_name='from address')),
                ('subject', models.CharField(blank=True, max_length=255, verbose_name='subject')),
                ('banner_title4', wagtail.fields.RichTextField(blank=True, verbose_name='Titulo de galeria-1 ')),
                ('bio', wagtail.fields.RichTextField(blank=True, verbose_name='rseña bibliografica')),
                ('banner_title5', wagtail.fields.RichTextField(blank=True, verbose_name='Titulo de galeria-2  ')),
                ('banner_title6', wagtail.fields.RichTextField(blank=True, verbose_name='Titulo de galeria-3  ')),
                ('banner_title7', wagtail.fields.RichTextField(blank=True, verbose_name='Titulo de galeria-4  ')),
                ('custom_title', models.CharField(blank=True, help_text='Reescribe el  Titulo de la publicacion ', max_length=100, null=True)),
                ('consulta', wagtail.fields.RichTextField(blank=True, verbose_name='Mensaje para que nos consulten por el formulario')),
                ('thank_you_text', wagtail.fields.RichTextField(blank=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(wagtail.contrib.forms.models.FormMixin, 'wagtailcore.page', models.Model),
        ),
        migrations.CreateModel(
            name='Hosts',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('to_address', models.CharField(blank=True, help_text='Optional - form submissions will be emailed to these addresses. Separate multiple addresses by comma.', max_length=255, validators=[wagtail.contrib.forms.models.validate_to_address], verbose_name='to address')),
                ('from_address', models.EmailField(blank=True, max_length=255, verbose_name='from address')),
                ('subject', models.CharField(blank=True, max_length=255, verbose_name='subject')),
                ('bio', wagtail.fields.RichTextField(blank=True, verbose_name='rseña bibliografica')),
                ('banner_title4', wagtail.fields.RichTextField(blank=True, verbose_name='Titulo de galeria-1 ')),
                ('banner_title5', wagtail.fields.RichTextField(blank=True, verbose_name='Titulo de galeria-2  ')),
                ('banner_title6', wagtail.fields.RichTextField(blank=True, verbose_name='Titulo de galeria-3  ')),
                ('banner_title7', wagtail.fields.RichTextField(blank=True, verbose_name='Titulo de galeria-4  ')),
                ('custom_title', models.CharField(blank=True, help_text='Reescribe el  Titulo de la publicacion ', max_length=100, null=True)),
                ('consulta', wagtail.fields.RichTextField(blank=True, verbose_name='Mensaje para que nos consulten por el formulario')),
                ('thank_you_text', wagtail.fields.RichTextField(blank=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(wagtail.contrib.forms.models.FormMixin, 'wagtailcore.page', models.Model),
        ),
        migrations.CreateModel(
            name='Worlds',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('to_address', models.CharField(blank=True, help_text='Optional - form submissions will be emailed to these addresses. Separate multiple addresses by comma.', max_length=255, validators=[wagtail.contrib.forms.models.validate_to_address], verbose_name='to address')),
                ('from_address', models.EmailField(blank=True, max_length=255, verbose_name='from address')),
                ('subject', models.CharField(blank=True, max_length=255, verbose_name='subject')),
                ('bio', wagtail.fields.RichTextField(blank=True, verbose_name='rseña bibliografica')),
                ('banner_title4', wagtail.fields.RichTextField(blank=True, verbose_name='Titulo de galeria-1 ')),
                ('banner_title5', wagtail.fields.RichTextField(blank=True, verbose_name='Titulo de galeria-2  ')),
                ('banner_title6', wagtail.fields.RichTextField(blank=True, verbose_name='Titulo de galeria-3  ')),
                ('banner_title7', wagtail.fields.RichTextField(blank=True, verbose_name='Titulo de galeria-4  ')),
                ('custom_title', models.CharField(blank=True, help_text='Reescribe el  Titulo de la publicacion ', max_length=100, null=True)),
                ('consulta', wagtail.fields.RichTextField(blank=True, verbose_name='Mensaje para que nos consulten por el formulario')),
                ('thank_you_text', wagtail.fields.RichTextField(blank=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(wagtail.contrib.forms.models.FormMixin, 'wagtailcore.page', models.Model),
        ),
        migrations.CreateModel(
            name='SocialMediaSettings_v10',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('facebook', models.URLField(blank=True, null=True)),
                ('twitter', models.URLField(blank=True, null=True)),
                ('instagram', models.URLField(blank=True, null=True)),
                ('youtube', models.URLField(blank=True, null=True)),
                ('site', models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, to='wagtailcore.site')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SocialMediaSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('facebook', models.URLField(blank=True, null=True)),
                ('twitter', models.URLField(blank=True, null=True)),
                ('instagram', models.URLField(blank=True, null=True)),
                ('youtube', models.URLField(blank=True, null=True)),
                ('pinterest', models.URLField(blank=True, null=True)),
                ('linkedin', models.URLField(blank=True, null=True)),
                ('site', models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, to='wagtailcore.site')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GaleriaHome',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Imagen Slide Banner 1')),
                ('image_10', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Imagen Slide Banner 10')),
                ('image_11', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Imagen Slide Banner 11')),
                ('image_12', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Imagen Slide Banner 11')),
                ('image_13', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Imagen Slide Banner 11')),
                ('image_14', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Imagen Slide Banner 11')),
                ('image_15', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Imagen Slide Banner 11')),
                ('image_16', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Imagen Slide Banner 11')),
                ('image_17', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Imagen Slide Banner 11')),
                ('image_18', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Imagen Slide Banner 11')),
                ('image_19', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Imagen Slide Banner 11')),
                ('image_2', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Imagen Slide Banner 2')),
                ('image_20', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Imagen Slide Banner 11')),
                ('image_21', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Imagen Slide Banner 11')),
                ('image_22', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Imagen Slide Banner 11')),
                ('image_23', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Imagen Slide Banner 11')),
                ('image_24', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Imagen Slide Banner 11')),
                ('image_25', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Imagen Slide Banner 11')),
                ('image_26', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Imagen Slide Banner 11')),
                ('image_3', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Imagen Slide Banner 3')),
                ('image_4', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Imagen Slide Banner 4')),
                ('image_5', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Imagen Slide Banner 5')),
                ('image_6', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Imagen Slide Banner 6')),
                ('image_7', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Imagen Slide Banner 7')),
                ('image_8', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Imagen Slide Banner 8')),
                ('image_9', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Imagen Slide Banner 9')),
                ('logo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Logotipo SmartQuail')),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='galleria', to='webapp.home')),
                ('profile_pic', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Foto de perfil')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GaleriadeImagenes_7',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Imagen Slide Banner 1')),
                ('image_2', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Imagen Slide Banner 2')),
                ('image_3', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Imagen Slide Banner 3')),
                ('image_4', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Imagen Advertising Thumb-Galeria')),
                ('logo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Logotipo de Juan Silva Photo')),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='galleria_7', to='webapp.worlds')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GaleriadeImagenes_6',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Imagen Slide Banner 1')),
                ('image_10', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Imagen Tear-Sheet-3')),
                ('image_11', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Imagen Tear-Sheet-4')),
                ('image_12', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Imagen Tear-Sheet-5 ')),
                ('image_13', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Imagen Tear-Sheet-6')),
                ('image_14', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Imagen Tear-Sheet-7')),
                ('image_15', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Imagen Tear-Sheet-8')),
                ('image_16', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Imagen Tear-Sheet-9')),
                ('image_17', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Imagen Tear-Sheet-10')),
                ('image_18', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Imagen Tear-Sheet-11')),
                ('image_19', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Imagen Tear-Sheet-12')),
                ('image_2', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Imagen Slide Banner 2')),
                ('image_20', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Imagen Tear-Sheet-13')),
                ('image_21', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Imagen Tear-Sheet-14')),
                ('image_22', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Imagen Tear-Sheet-15')),
                ('image_23', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Imagen Tear-Sheet-16')),
                ('image_24', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Imagen Tear-Sheet-17')),
                ('image_25', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Imagen Tear-Sheet-18')),
                ('image_26', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Imagen Tear-Sheet-19')),
                ('image_27', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Imagen Tear-Sheet-20')),
                ('image_3', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Imagen Slide Banner 3')),
                ('image_4', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Imagen Advertising Thumb-Galeria')),
                ('image_5', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Imagen Product Thumb2-Galeria')),
                ('image_6', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Imagen Documentary Thumb3-Galeria')),
                ('image_7', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Imagen Landscape Thumb4-Galeria')),
                ('image_8', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Imagen Tear-Sheet-1')),
                ('image_9', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Imagen Tear-Sheet-2')),
                ('logo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Logotipo de Juan Silva Photo')),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='galleria_6', to='webapp.environs')),
                ('profile_pic', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Foto de perfil')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GaleriadeImagenes_5',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('logo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Imagen Isla Florena')),
                ('logo_0', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Logo Isla Florena')),
                ('logo_1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Logo Isla Florena blanco')),
                ('logo_2', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Logo 0')),
                ('logo_3', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Logo 1')),
                ('logo_4', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Logo 2')),
                ('logo_5', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Logo 3')),
                ('logo_6', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Logo 4')),
                ('logo_7', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Logo 5')),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='galleria_5', to='webapp.contacts')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GaleriadeImagenes_4',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Imagen Slide Banner 1')),
                ('logo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Logotipo de Juan Silva Photo')),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='galleria_4', to='webapp.host')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GaleriadeImagenes_3',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Imagen Slide Banner 1')),
                ('image_2', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Imagen Slide Banner 2')),
                ('image_3', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Imagen Slide Banner 3')),
                ('image_4', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Imagen Advertising Thumb-Galeria')),
                ('logo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Logotipo de Juan Silva Photo')),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='galleria_3', to='webapp.hosts')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GaleriadeImagenes_2',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Imagen Slide Banner 1')),
                ('image_10', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Imagen Product Thumb2-Galeria')),
                ('image_11', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Imagen Documentary Thumb3-Galeria')),
                ('image_12', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Imagen Slide Banner 2')),
                ('image_2', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Imagen Slide Banner 2')),
                ('image_3', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Imagen Slide Banner 3')),
                ('image_4', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Imagen Advertising Thumb-Galeria')),
                ('image_5', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Imagen Product Thumb2-Galeria')),
                ('image_6', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Imagen Documentary Thumb3-Galeria')),
                ('image_7', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Imagen Slide Banner 2')),
                ('image_8', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Imagen Slide Banner 3')),
                ('image_9', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Imagen Advertising Thumb-Galeria')),
                ('logo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Logotipo de Juan Silva Photo')),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='galleria_2', to='webapp.charms')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GaleriadeImagenes_1',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Imagen Slide Banner 1')),
                ('image_2', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Imagen Slide Banner 2')),
                ('image_3', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Imagen Slide Banner 3')),
                ('image_4', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Imagen Advertising Thumb-Galeria')),
                ('image_5', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Imagen Product Thumb2-Galeria')),
                ('image_6', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Imagen Documentary Thumb3-Galeria')),
                ('logo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Logotipo de Juan Silva Photo')),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='galleria_1', to='webapp.history')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ConsultasHome',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('clean_name', models.CharField(blank=True, default='', help_text='Safe name of the form field, the label converted to ascii_snake_case', max_length=255, verbose_name='name')),
                ('label', models.CharField(help_text='The label of the form field', max_length=255, verbose_name='label')),
                ('field_type', models.CharField(choices=[('singleline', 'Single line text'), ('multiline', 'Multi-line text'), ('email', 'Email'), ('number', 'Number'), ('url', 'URL'), ('checkbox', 'Checkbox'), ('checkboxes', 'Checkboxes'), ('dropdown', 'Drop down'), ('multiselect', 'Multiple select'), ('radio', 'Radio buttons'), ('date', 'Date'), ('datetime', 'Date/time'), ('hidden', 'Hidden field')], max_length=16, verbose_name='field type')),
                ('required', models.BooleanField(default=True, verbose_name='required')),
                ('choices', models.TextField(blank=True, help_text='Comma or new line separated list of choices. Only applicable in checkboxes, radio and dropdown.', verbose_name='choices')),
                ('default_value', models.TextField(blank=True, help_text='Default value. Comma or new line separated values supported for checkboxes.', verbose_name='default value')),
                ('help_text', models.CharField(blank=True, max_length=255, verbose_name='help text')),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='form_fields', to='webapp.home')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='consultas_9',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('clean_name', models.CharField(blank=True, default='', help_text='Safe name of the form field, the label converted to ascii_snake_case', max_length=255, verbose_name='name')),
                ('label', models.CharField(help_text='The label of the form field', max_length=255, verbose_name='label')),
                ('field_type', models.CharField(choices=[('singleline', 'Single line text'), ('multiline', 'Multi-line text'), ('email', 'Email'), ('number', 'Number'), ('url', 'URL'), ('checkbox', 'Checkbox'), ('checkboxes', 'Checkboxes'), ('dropdown', 'Drop down'), ('multiselect', 'Multiple select'), ('radio', 'Radio buttons'), ('date', 'Date'), ('datetime', 'Date/time'), ('hidden', 'Hidden field')], max_length=16, verbose_name='field type')),
                ('required', models.BooleanField(default=True, verbose_name='required')),
                ('choices', models.TextField(blank=True, help_text='Comma or new line separated list of choices. Only applicable in checkboxes, radio and dropdown.', verbose_name='choices')),
                ('default_value', models.TextField(blank=True, help_text='Default value. Comma or new line separated values supported for checkboxes.', verbose_name='default value')),
                ('help_text', models.CharField(blank=True, max_length=255, verbose_name='help text')),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='form_fields', to='webapp.worlds')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='consultas_7',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('clean_name', models.CharField(blank=True, default='', help_text='Safe name of the form field, the label converted to ascii_snake_case', max_length=255, verbose_name='name')),
                ('label', models.CharField(help_text='The label of the form field', max_length=255, verbose_name='label')),
                ('field_type', models.CharField(choices=[('singleline', 'Single line text'), ('multiline', 'Multi-line text'), ('email', 'Email'), ('number', 'Number'), ('url', 'URL'), ('checkbox', 'Checkbox'), ('checkboxes', 'Checkboxes'), ('dropdown', 'Drop down'), ('multiselect', 'Multiple select'), ('radio', 'Radio buttons'), ('date', 'Date'), ('datetime', 'Date/time'), ('hidden', 'Hidden field')], max_length=16, verbose_name='field type')),
                ('required', models.BooleanField(default=True, verbose_name='required')),
                ('choices', models.TextField(blank=True, help_text='Comma or new line separated list of choices. Only applicable in checkboxes, radio and dropdown.', verbose_name='choices')),
                ('default_value', models.TextField(blank=True, help_text='Default value. Comma or new line separated values supported for checkboxes.', verbose_name='default value')),
                ('help_text', models.CharField(blank=True, max_length=255, verbose_name='help text')),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='form_fields', to='webapp.environs')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='consultas_5',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('clean_name', models.CharField(blank=True, default='', help_text='Safe name of the form field, the label converted to ascii_snake_case', max_length=255, verbose_name='name')),
                ('label', models.CharField(help_text='The label of the form field', max_length=255, verbose_name='label')),
                ('field_type', models.CharField(choices=[('singleline', 'Single line text'), ('multiline', 'Multi-line text'), ('email', 'Email'), ('number', 'Number'), ('url', 'URL'), ('checkbox', 'Checkbox'), ('checkboxes', 'Checkboxes'), ('dropdown', 'Drop down'), ('multiselect', 'Multiple select'), ('radio', 'Radio buttons'), ('date', 'Date'), ('datetime', 'Date/time'), ('hidden', 'Hidden field')], max_length=16, verbose_name='field type')),
                ('required', models.BooleanField(default=True, verbose_name='required')),
                ('choices', models.TextField(blank=True, help_text='Comma or new line separated list of choices. Only applicable in checkboxes, radio and dropdown.', verbose_name='choices')),
                ('default_value', models.TextField(blank=True, help_text='Default value. Comma or new line separated values supported for checkboxes.', verbose_name='default value')),
                ('help_text', models.CharField(blank=True, max_length=255, verbose_name='help text')),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='form_fields', to='webapp.contacts')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='consultas_4',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('clean_name', models.CharField(blank=True, default='', help_text='Safe name of the form field, the label converted to ascii_snake_case', max_length=255, verbose_name='name')),
                ('label', models.CharField(help_text='The label of the form field', max_length=255, verbose_name='label')),
                ('field_type', models.CharField(choices=[('singleline', 'Single line text'), ('multiline', 'Multi-line text'), ('email', 'Email'), ('number', 'Number'), ('url', 'URL'), ('checkbox', 'Checkbox'), ('checkboxes', 'Checkboxes'), ('dropdown', 'Drop down'), ('multiselect', 'Multiple select'), ('radio', 'Radio buttons'), ('date', 'Date'), ('datetime', 'Date/time'), ('hidden', 'Hidden field')], max_length=16, verbose_name='field type')),
                ('required', models.BooleanField(default=True, verbose_name='required')),
                ('choices', models.TextField(blank=True, help_text='Comma or new line separated list of choices. Only applicable in checkboxes, radio and dropdown.', verbose_name='choices')),
                ('default_value', models.TextField(blank=True, help_text='Default value. Comma or new line separated values supported for checkboxes.', verbose_name='default value')),
                ('help_text', models.CharField(blank=True, max_length=255, verbose_name='help text')),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='form_fields', to='webapp.host')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='consultas_3',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('clean_name', models.CharField(blank=True, default='', help_text='Safe name of the form field, the label converted to ascii_snake_case', max_length=255, verbose_name='name')),
                ('label', models.CharField(help_text='The label of the form field', max_length=255, verbose_name='label')),
                ('field_type', models.CharField(choices=[('singleline', 'Single line text'), ('multiline', 'Multi-line text'), ('email', 'Email'), ('number', 'Number'), ('url', 'URL'), ('checkbox', 'Checkbox'), ('checkboxes', 'Checkboxes'), ('dropdown', 'Drop down'), ('multiselect', 'Multiple select'), ('radio', 'Radio buttons'), ('date', 'Date'), ('datetime', 'Date/time'), ('hidden', 'Hidden field')], max_length=16, verbose_name='field type')),
                ('required', models.BooleanField(default=True, verbose_name='required')),
                ('choices', models.TextField(blank=True, help_text='Comma or new line separated list of choices. Only applicable in checkboxes, radio and dropdown.', verbose_name='choices')),
                ('default_value', models.TextField(blank=True, help_text='Default value. Comma or new line separated values supported for checkboxes.', verbose_name='default value')),
                ('help_text', models.CharField(blank=True, max_length=255, verbose_name='help text')),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='form_fields', to='webapp.hosts')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='consultas_2',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('clean_name', models.CharField(blank=True, default='', help_text='Safe name of the form field, the label converted to ascii_snake_case', max_length=255, verbose_name='name')),
                ('label', models.CharField(help_text='The label of the form field', max_length=255, verbose_name='label')),
                ('field_type', models.CharField(choices=[('singleline', 'Single line text'), ('multiline', 'Multi-line text'), ('email', 'Email'), ('number', 'Number'), ('url', 'URL'), ('checkbox', 'Checkbox'), ('checkboxes', 'Checkboxes'), ('dropdown', 'Drop down'), ('multiselect', 'Multiple select'), ('radio', 'Radio buttons'), ('date', 'Date'), ('datetime', 'Date/time'), ('hidden', 'Hidden field')], max_length=16, verbose_name='field type')),
                ('required', models.BooleanField(default=True, verbose_name='required')),
                ('choices', models.TextField(blank=True, help_text='Comma or new line separated list of choices. Only applicable in checkboxes, radio and dropdown.', verbose_name='choices')),
                ('default_value', models.TextField(blank=True, help_text='Default value. Comma or new line separated values supported for checkboxes.', verbose_name='default value')),
                ('help_text', models.CharField(blank=True, max_length=255, verbose_name='help text')),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='form_fields', to='webapp.charms')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='consultas_1',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('clean_name', models.CharField(blank=True, default='', help_text='Safe name of the form field, the label converted to ascii_snake_case', max_length=255, verbose_name='name')),
                ('label', models.CharField(help_text='The label of the form field', max_length=255, verbose_name='label')),
                ('field_type', models.CharField(choices=[('singleline', 'Single line text'), ('multiline', 'Multi-line text'), ('email', 'Email'), ('number', 'Number'), ('url', 'URL'), ('checkbox', 'Checkbox'), ('checkboxes', 'Checkboxes'), ('dropdown', 'Drop down'), ('multiselect', 'Multiple select'), ('radio', 'Radio buttons'), ('date', 'Date'), ('datetime', 'Date/time'), ('hidden', 'Hidden field')], max_length=16, verbose_name='field type')),
                ('required', models.BooleanField(default=True, verbose_name='required')),
                ('choices', models.TextField(blank=True, help_text='Comma or new line separated list of choices. Only applicable in checkboxes, radio and dropdown.', verbose_name='choices')),
                ('default_value', models.TextField(blank=True, help_text='Default value. Comma or new line separated values supported for checkboxes.', verbose_name='default value')),
                ('help_text', models.CharField(blank=True, max_length=255, verbose_name='help text')),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='form_fields', to='webapp.history')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
    ]
